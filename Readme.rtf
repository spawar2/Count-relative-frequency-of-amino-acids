{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;\f2\fmodern\fcharset0 CourierNewPSMT;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}.}{\leveltext\leveltemplateid1\'01.;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs29\fsmilli14667 \cf2 \expnd0\expndtw0\kerning0
Background: 
\f1\b0 the goal is to introduce targeted mutations in a protein by using expanded genetic code, where a mixture of bases is present at a certain position. For example, codon ATB where B is a mixture of C, G and T encodes for both Ile and Met. One can incorporate such codons in a synthesized gene or oligo to get a low-complexity library. We want to modify all positions independently from each other. 
\fs24 \

\fs29\fsmilli14667 Unfortunately, some expanded triplets code for more amino acids than necessary. Say, we want an amino acid to be either Ala, Ile or Val \'96 there are many degenerate codons that can encode for all three of them. For example, RYA (R = A or G, Y = C or T), however the same codon will also encode for Thr. There are additional possibilities, such as RYT or RYC, however they will again encode for Thr. 
\fs24 \

\fs29\fsmilli14667 Let\'92s define \'93codon efficiency\'94 as the number of codons translated into desired amino acids divided by the total number of all codons encoded by the degenerate codon. E.g. RYA = (ACA, ATA, GCA, GTA), i.e. 4 total. ACA is Thr, ATA is Ile, GCA is Ala and GTA is Val. If Ile, Ala and Val are desired and Thr is not, then the efficiency is 3/4 = 75%. Turns out that other possibilities such as RYT, RYC and a few others have the same 75% efficiency, we can use any of them. In the real life the choice would be driven by codon usage frequency in the target organism (yeast), but this is outside of the scope of this assignment. 
\fs24 \

\f0\b\fs29\fsmilli14667 Task
\f1\b0 : 
\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\fs29\fsmilli14667 \cf2 \kerning1\expnd0\expndtw0 {\listtext	.	}\expnd0\expndtw0\kerning0
1) \'a0Write a function that takes a set of amino acids (say, \{\'91A\'92,\'92V\'92,\'92I\'92\}) and returns the set of most efficient codons and the achieved efficiency 
\fs24 \uc0\u8232 
\fs29\fsmilli14667 a. For \{A\'92,\'92V\'92,\'92I\'92\} the answer would be 
\fs24 \uc0\u8232 
\f2\fs26\fsmilli13333 (\{'RYA', 'RYH', 'RYC', 'RYW', 'RYM', 'RYY', 'RYT'\}, 0.75) 
\f1\fs24 \uc0\u8232 \
\ls1\ilvl0
\fs29\fsmilli14667 \kerning1\expnd0\expndtw0 {\listtext	.	}\expnd0\expndtw0\kerning0
2) \'a0Write a function that takes a set of amino acids and:\uc0\u8232 a. if they can be encoded by codons with 100% efficiency, returns the input set\u8232 b. if they cannot be encoded by a codon with 100% efficiency, removes the minimal 
\fs24 \uc0\u8232 
\fs29\fsmilli14667 number of amino acids from the list such as the resulting list can be encoded with 100% efficiency. If there are multiple possibilities, return all of them. 
\fs24 \uc0\u8232 
\fs29\fsmilli14667 I.e. from \{\'91A\'92,\'92V\'92\} one would get \{\'91A\'92,\'91V\'92\} since they can be both encoded by the a number of codons with 100% efficiency (say, GYT) 
\fs24 \uc0\u8232 
\fs29\fsmilli14667 From \{\'91A\'92,\'92I\'92,\'92V\'92\} one would get \{\'91I\'92,\'92V\'92\} and \{\'91A\'92,\'92V\'92\} (both 100% efficient), but not \{\'91A\'92,\'92I\'92\} since \{\'91A\'92,\'92I\'92\} is only 50% efficient. 
\fs24 \uc0\u8232 \
}